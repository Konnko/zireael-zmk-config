/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        gotoadjust {
            bindings = <&tog 3>;
            key-positions = <11 23 35>;
            require-prior-idle-ms = <500>;
            layers = <0>;
            timeout-ms = <50>;
        };

        copy {
            bindings = <&kp LG(K_COPY)>;
            key-positions = <3 4>;
        };

        cut {
            bindings = <&kp K_CUT>;
            key-positions = <15 16>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <27 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_GUI GRAVE   &kp Q  &kp W  &kp E    &kp R           &kp T          &kp Y        &kp U      &kp I           &kp O    &kp P     &kp RIGHT_GUI
&mt LCTRL BACKSLASH  &kp A  &kp S  &kp D    &kp F           &kp G          &kp H        &kp J      &kp K           &kp L    &kp SEMI  &mt RCTRL MINUS
&mt LEFT_ALT MINUS   &kp Z  &kp X  &kp C    &kp V           &kp B          &kp N        &kp M      &kp COMMA       &kp DOT  &kp FSLH  &mt RIGHT_ALT EQUAL
                                   &kp TAB  &kp LEFT_SHIFT  &kp BACKSPACE  &lt 1 ENTER  &kp SPACE  &lt RSE ESCAPE
            >;
        };

        numbers {
            bindings = <
&trans  &none   &kp NUMBER_7  &kp N8  &kp N9  &none   &none      &none     &none     &none   &none      &trans
&trans  &none   &kp N4        &kp N5  &kp N6  &none   &kp LC(I)  &kp H     &kp N     &kp Y   &kp U      &trans
&trans  &kp N0  &kp N1        &kp N2  &kp N3  &none   &kp LC(G)  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
                              &trans  &trans  &trans  &trans     &trans    &trans
            >;
        };

        parenthesis {
            bindings = <
&trans  &none  &none  &kp LEFT_BRACE        &kp RIGHT_BRACE        &none   &none   &none   &none   &none  &none  &trans
&trans  &none  &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none   &none   &none   &none   &none  &none  &trans
&trans  &none  &none  &kp LBKT              &kp RBKT               &none   &none   &none   &none   &none  &none  &trans
                      &trans                &trans                 &trans  &trans  &trans  &trans
            >;
        };

        adjust_layer {
            bindings = <
&none       &none         &none         &none         &none         &none         &kp K_MUTE         &none   &none   &none  &none  &trans
&none       &none         &none         &none         &none         &none         &kp C_VOLUME_UP    &none   &none   &none  &none  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp C_VOLUME_DOWN  &none   &none   &none  &none  &trans
                                        &trans        &trans        &trans        &trans             &trans  &trans
            >;
        };
    };
};
